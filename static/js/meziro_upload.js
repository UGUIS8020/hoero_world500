const dropZone = document.getElementById("dropZone");
const fileInput = document.getElementById("fileInput");
const folderInput = document.getElementById("folderInput");
const fileList = document.getElementById("fileList");
const status = document.getElementById("status");
const uploadButton = document.getElementById("uploadButton");
const clearButton = document.getElementById("clearButton");
const progressContainer = document.getElementById("progressContainer");
const progressBar = document.getElementById("progressBar");

let selectedFiles = []; // ÈÅ∏Êäû„Åï„Çå„Åü„Éï„Ç°„Ç§„É´„Çí‰øùÊåÅ
let totalSize = 0;

// 100‰ª∂‰ª•‰∏ä„ÅÆ„Éï„Ç°„Ç§„É´„ÇíÂèñÂæó„Åô„Çã„Åü„ÇÅ„Å´ÂøÖË¶Å„Å™Èñ¢Êï∞
async function readAllEntries(reader) {
    const entries = [];

    async function readBatch() {
        return new Promise((resolve, reject) => {
            reader.readEntries((batch) => {
                if (batch.length === 0) {
                    resolve(null); // ÁµÇ‰∫ÜÊù°‰ª∂
                } else {
                    resolve(batch);
                }
            }, reject);
        });
    }

    let batch;
    while ((batch = await readBatch()) !== null) {
        entries.push(...batch);
    }

    return entries;
}

function showStatus(message, type) {
    status.innerHTML = `<div class="${type}">${message}</div>`;
}

function formatFileSize(bytes) {
    if (bytes < 1024) return bytes + " B";
    if (bytes < 1024 * 1024) return (bytes / 1024).toFixed(1) + " KB";
    if (bytes < 1024 * 1024 * 1024)
        return (bytes / (1024 * 1024)).toFixed(1) + " MB";
    return (bytes / (1024 * 1024 * 1024)).toFixed(1) + " GB";
}

function updateButtonState() {
    uploadButton.disabled = selectedFiles.length === 0;
    clearButton.disabled = selectedFiles.length === 0;
}

function getRelativePath(file) {
    // webkitRelativePath „Åå„ÅÇ„ÇãÂ†¥Âêà„ÅØ„Åù„Çå„Çí‰ΩøÁî®
    if (file.webkitRelativePath) return file.webkitRelativePath;

    // DataTransferItem„Åß„ÅÆ„Éï„Ç©„É´„ÉÄ„Ç¢„ÉÉ„Éó„É≠„Éº„Éâ„ÅÆÂ†¥Âêà
    if (file.relativePath) return file.relativePath;

    // ÈÄöÂ∏∏„ÅÆ„Éï„Ç°„Ç§„É´
    return file.name;
}

function isFolderEntry(entry) {
    return entry && entry.isDirectory;
}

// function displayFiles() {
//     fileList.innerHTML = "";
//     totalSize = 0;

//     // „Éï„Ç°„Ç§„É´„Éë„Çπ„Åß„Ç∞„É´„Éº„ÉóÂåñ
//     const filesByFolder = {};
//     let totalFileCount = 0;

//     selectedFiles.forEach((file) => {
//         totalSize += file.size;
//         totalFileCount++;
//         const path = getRelativePath(file);
//         const folderPath = path.includes("/")
//             ? path.substring(0, path.lastIndexOf("/"))
//             : "";

//         if (!filesByFolder[folderPath]) {
//             filesByFolder[folderPath] = [];
//         }
//         filesByFolder[folderPath].push(file);
//     });

//     // „Éï„Ç©„É´„ÉÄ„Åî„Å®„ÅÆ„Éï„Ç°„Ç§„É´‰∏ÄË¶ß„ÇíË°®Á§∫
//     Object.keys(filesByFolder)
//         .sort()
//         .forEach((folder) => {
//             const files = filesByFolder[folder];
//             const folderSize = files.reduce((sum, file) => sum + file.size, 0);

//             if (folder !== "") {
//                 // „Éï„Ç©„É´„ÉÄÂêç„ÅÆ„ÅøË°®Á§∫
//                 const folderItem = document.createElement("div");
//                 folderItem.className = "folder-summary";
//                 folderItem.textContent = `üìÅ ${folder}/ (${
//                     files.length
//                 } „Éï„Ç°„Ç§„É´, ${formatFileSize(folderSize)})`;
//                 fileList.appendChild(folderItem);
//             } else {
//                 // „Éï„Ç©„É´„ÉÄ„Å´Â±û„Åï„Å™„ÅÑ„Éï„Ç°„Ç§„É´„ÅØ„Åù„ÅÆ„Åæ„ÅæË°®Á§∫
//                 files.forEach((file) => {
//                     const fileItem = document.createElement("div");
//                     fileItem.className = "file-item";
//                     fileItem.textContent = `üìÑ ${file.name} (${formatFileSize(
//                         file.size
//                     )})`;
//                     fileList.appendChild(fileItem);
//                 });
//             }
//         });
// }

function displayFiles() {
    fileList.innerHTML = "";
    totalSize = 0;

    // „Éï„Ç°„Ç§„É´„Éë„Çπ„Åß„Ç∞„É´„Éº„ÉóÂåñ
    const filesByFolder = {};
    let totalFileCount = 0;

    // „Éá„Éê„ÉÉ„Ç∞Áî®„Å´„Éë„ÇπÊÉÖÂ†±„ÇíÁ¢∫Ë™ç
    console.log("ÈÅ∏Êäû„Åï„Çå„Åü„Éï„Ç°„Ç§„É´:");

    selectedFiles.forEach((file) => {
        totalSize += file.size;
        totalFileCount++;
        const path = getRelativePath(file);
        console.log(`- ${file.name}: „Éë„Çπ=${path}`); // „Éá„Éê„ÉÉ„Ç∞Âá∫Âäõ

        const folderPath = path.includes("/")
            ? path.substring(0, path.lastIndexOf("/"))
            : "";

        if (!filesByFolder[folderPath]) {
            filesByFolder[folderPath] = [];
        }
        filesByFolder[folderPath].push(file);
    });

    // „Éá„Éê„ÉÉ„Ç∞Áî®„Å´„Éï„Ç©„É´„ÉÄÊßãÈÄ†„ÇíÁ¢∫Ë™ç
    console.log("„Éï„Ç©„É´„ÉÄÊßãÈÄ†:", Object.keys(filesByFolder));

    // ÂêàË®àÊÉÖÂ†±„ÅÆË°®Á§∫
    const folderCount = Object.keys(filesByFolder).filter(
        (f) => f !== ""
    ).length;
    const summaryItem = document.createElement("div");
    summaryItem.className = "file-summary";
    let summaryText = `ÂêàË®à ${totalFileCount} „Éï„Ç°„Ç§„É´ÈÅ∏ÊäûÊ∏à„Åø (${formatFileSize(
        totalSize
    )})`;
    if (folderCount > 0) {
        summaryText += `, ${folderCount} „Éï„Ç©„É´„ÉÄ`;
    }
    summaryItem.textContent = summaryText;
    fileList.appendChild(summaryItem);

    // „Éï„Ç©„É´„ÉÄ„Å®„Éï„Ç°„Ç§„É´„ÇíÂàÜ„Åë„Å¶Ë°®Á§∫
    // 1. „Åæ„Åö„Éï„Ç©„É´„ÉÄ„ÅÆ„ÅøË°®Á§∫
    Object.keys(filesByFolder)
        .sort()
        .filter((folder) => folder !== "") // „Éï„Ç©„É´„ÉÄ„ÅÆ„Åø„Éï„Ç£„É´„Çø„É™„É≥„Ç∞
        .forEach((folder) => {
            const files = filesByFolder[folder];
            const folderSize = files.reduce((sum, file) => sum + file.size, 0);

            // „Éï„Ç©„É´„ÉÄ„Ç≥„É≥„ÉÜ„Éä„Çí‰ΩúÊàê
            const folderContainer = document.createElement("div");
            folderContainer.className = "folder-container";
            fileList.appendChild(folderContainer);

            // „Éï„Ç©„É´„ÉÄÂêçË°®Á§∫
            const folderItem = document.createElement("div");
            folderItem.className = "folder-summary clickable";
            folderItem.textContent = `üìÅ ${folder}/ (${
                files.length
            } „Éï„Ç°„Ç§„É´, ${formatFileSize(folderSize)})`;
            folderContainer.appendChild(folderItem);

            // „Éï„Ç°„Ç§„É´„É™„Çπ„Éà„Ç≥„É≥„ÉÜ„ÉäÔºàÂàùÊúüÁä∂ÊÖã„ÅØÈùûË°®Á§∫Ôºâ
            const filesContainer = document.createElement("div");
            filesContainer.className = "files-container";
            filesContainer.style.display = "none"; // ÈùûË°®Á§∫
            folderContainer.appendChild(filesContainer);

            // „Éï„Ç©„É´„ÉÄÂÜÖ„ÅÆ„Éï„Ç°„Ç§„É´‰∏ÄË¶ß„Çí„Ç≥„É≥„ÉÜ„Éä„Å´ËøΩÂä†
            files.forEach((file) => {
                const fileItem = document.createElement("div");
                fileItem.className = "file-item";
                fileItem.textContent = `„Éª${file.name} (${formatFileSize(
                    file.size
                )})`;
                filesContainer.appendChild(fileItem);
            });

            // „ÇØ„É™„ÉÉ„ÇØ„Ç§„Éô„É≥„Éà„Åß„Éï„Ç°„Ç§„É´‰∏ÄË¶ß„ÅÆË°®Á§∫/ÈùûË°®Á§∫„ÇíÂàá„ÇäÊõø„Åà
            folderItem.addEventListener("click", function () {
                if (filesContainer.style.display === "none") {
                    filesContainer.style.display = "block";
                } else {
                    filesContainer.style.display = "none";
                }
            });
        });

    // 2. „É´„Éº„ÉàÁõ¥‰∏ã„ÅÆ„Éï„Ç°„Ç§„É´„ÇíË°®Á§∫
    if (filesByFolder[""] && filesByFolder[""].length > 0) {
        const rootFiles = filesByFolder[""];
        const rootSize = rootFiles.reduce((sum, file) => sum + file.size, 0);

        // „É´„Éº„Éà„Éï„Ç°„Ç§„É´„ÅÆ„Éò„ÉÉ„ÉÄ„Éº
        const rootHeader = document.createElement("div");
        rootHeader.className = "folder-summary";
        rootHeader.textContent = `„É´„Éº„Éà„Éï„Ç°„Ç§„É´ (${
            rootFiles.length
        } „Éï„Ç°„Ç§„É´, ${formatFileSize(rootSize)})`;
        fileList.appendChild(rootHeader);

        // „É´„Éº„Éà„Éï„Ç°„Ç§„É´‰∏ÄË¶ß
        rootFiles.forEach((file) => {
            const fileItem = document.createElement("div");
            fileItem.className = "file-item";
            fileItem.textContent = `üìÑ ${file.name} (${formatFileSize(
                file.size
            )})`;
            fileList.appendChild(fileItem);
        });
    }
}

// „Éï„Ç°„Ç§„É´ËøΩÂä†Âá¶ÁêÜ
function addFiles(files) {
    // „Çµ„Ç§„Ç∫„ÉÅ„Çß„ÉÉ„ÇØ
    const oversizedFiles = Array.from(files).filter(
        (f) => f.size > 2 * 1024 * 1024 * 1024
    );
    if (oversizedFiles.length > 0) {
        showStatus(
            `Ë≠¶Âëä: Ê¨°„ÅÆ„Éï„Ç°„Ç§„É´„ÅØ2GB„ÇíË∂Ö„Åà„Çã„Åü„ÇÅÁÑ°Ë¶ñ„Åï„Çå„Åæ„Åó„Åü: ${oversizedFiles
                .map((f) => f.name)
                .join(", ")}`,
            "error"
        );
    }

    // ÊúâÂäπ„Å™„Éï„Ç°„Ç§„É´„Å†„Åë„ÇíËøΩÂä†
    const validFiles = Array.from(files).filter(
        (f) => f.size <= 2 * 1024 * 1024 * 1024
    );

    // ÈáçË§á„ÉÅ„Çß„ÉÉ„ÇØ
    for (const file of validFiles) {
        const path = getRelativePath(file);
        const duplicate = selectedFiles.find(
            (f) => getRelativePath(f) === path
        );

        if (!duplicate) {
            selectedFiles.push(file);
        }
    }

    displayFiles();
    updateButtonState();
}

// „Éï„Ç©„É´„ÉÄ„Åã„Çâ„Éï„Ç°„Ç§„É´„ÇíÂÜçÂ∏∞ÁöÑ„Å´Ë™≠„ÅøËæº„ÇÄ
async function readEntryRecursively(entry) {
    if (isFolderEntry(entry)) {
        const reader = entry.createReader();
        const entries = await readAllEntries(reader); // ‚úÖ „Åì„Åì„ÇíÂ§âÊõ¥

        for (const childEntry of entries) {
            await readEntryRecursively(childEntry);
        }
    } else if (entry.isFile) {
        const file = await new Promise((resolve) => {
            entry.file(resolve);
        });

        file.relativePath = entry.fullPath.substring(1); // ÂÖàÈ†≠„ÅÆ '/' „ÇíÈô§„Åè
        const isDuplicate = selectedFiles.some(
            (f) => f.relativePath === file.relativePath
        );
        if (!isDuplicate && file.size <= 2 * 1024 * 1024 * 1024) {
            selectedFiles.push(file);
        }
    }
}

// „Éâ„É©„ÉÉ„Ç∞ÔºÜ„Éâ„É≠„ÉÉ„Éó„Åï„Çå„Åü„Ç¢„Ç§„ÉÜ„É†„ÇíÂá¶ÁêÜ
async function uploadFiles(files) {
    if (files.length === 0) return;

    const formData = new FormData();

    // CSRF„Éà„Éº„ÇØ„É≥„ÇíËøΩÂä†ÔºàÊúÄÂàù„Å´ËøΩÂä†„Åó„Å¶„Åä„ÅèÔºâ
    formData.append("csrf_token", csrf_token);

    // „ÉÜ„Ç≠„Çπ„ÉàÁ≥ªÂÖ•Âäõ„ÇíÂèéÈõÜ
    const businessName = document.getElementById("businessName").value;
    const userName = document.getElementById("userName").value;
    const userEmail = document.getElementById("userEmail").value;
    const patientName = document.getElementById("PatientName").value;
    const appointmentDate = document.getElementById("appointmentDate").value;
    const appointmentHour = document.getElementById("appointmentHour").value;
    const projectType = document.getElementById("projectType").value;
    const shade = document.getElementById("shade").value;
    const userMessage = document.getElementById("userMessage").value;

    // crown_typeÔºà„É©„Ç∏„Ç™„Éú„Çø„É≥Ôºâ
    const crownRadio = document.querySelector(
        'input[name="crown_type"]:checked'
    );
    const crownType = crownRadio ? crownRadio.value : "";

    // teeth[]Ôºà„ÉÅ„Çß„ÉÉ„ÇØ„Éú„ÉÉ„ÇØ„ÇπÔºâ
    const selectedTeeth = [];
    document.querySelectorAll('input[name="teeth[]"]:checked').forEach((cb) => {
        selectedTeeth.push(cb.value);
    });

    // ‚ñº ÂøÖÈ†à„Éï„Ç£„Éº„É´„Éâ„ÅÆ„Éê„É™„Éá„Éº„Ç∑„Éß„É≥
    if (
        !businessName ||
        !userName ||
        !userEmail ||
        !patientName ||
        !appointmentDate ||
        !appointmentHour ||
        !projectType ||
        !userMessage
    ) {
        showStatus("„Åô„Åπ„Å¶„ÅÆÂøÖÈ†àÈ†ÖÁõÆ„ÇíÂÖ•Âäõ„Åó„Å¶„Åè„Å†„Åï„ÅÑ„ÄÇ", "error");
        return;
    }

    // ‚ñº FormData „Å´ËøΩÂä†
    formData.append("businessName", businessName);
    formData.append("userName", userName);
    formData.append("userEmail", userEmail);
    formData.append("PatientName", patientName);
    formData.append("appointmentDate", appointmentDate);
    formData.append("appointmentHour", appointmentHour);
    formData.append("projectType", projectType);
    formData.append("shade", shade);
    formData.append("userMessage", userMessage);
    formData.append("crown_type", crownType);
    formData.append("teeth", JSON.stringify(selectedTeeth)); // JSONÊñáÂ≠óÂàó„Å®„Åó„Å¶ÈÄÅ‰ø°

    // ‚ñº „Éï„Ç°„Ç§„É´Âá¶ÁêÜ
    let totalBytes = files.reduce((sum, file) => sum + file.size, 0);
    let uploadedBytes = 0;

    const paths = {};

    for (const file of files) {
        const path = getRelativePath(file);
        formData.append("files[]", file);
        // „Éë„ÇπÊÉÖÂ†±„ÇíÂà•ÈÄîÈÄÅ‰ø°
        paths[file.name] = path;
    }

    // „Éë„ÇπÊÉÖÂ†±„ÇíJSON„Å®„Åó„Å¶ËøΩÂä†
    formData.append("paths", JSON.stringify(paths));

    progressContainer.style.display = "block";
    showStatus("„Éï„Ç°„Ç§„É´„Çí„Ç¢„ÉÉ„Éó„É≠„Éº„Éâ‰∏≠...", "processing");
    uploadButton.disabled = true;
    clearButton.disabled = true;

    try {
        const xhr = new XMLHttpRequest();
        xhr.open("POST", "/meziro_upload", true);

        // CSRF„Éà„Éº„ÇØ„É≥„Çí„Éò„ÉÉ„ÉÄ„Éº„Å´ËøΩÂä†Ôºà„Åì„Çå„ÅåÈáçË¶Å„Å™Â§âÊõ¥ÁÇπÔºâ
        xhr.setRequestHeader("X-CSRFToken", csrf_token);

        // „Éó„É≠„Ç∞„É¨„ÇπÂá¶ÁêÜ
        xhr.upload.onprogress = function (event) {
            if (event.lengthComputable) {
                uploadedBytes = event.loaded;
                const percentage = Math.round(
                    (uploadedBytes / totalBytes) * 100
                );
                progressBar.style.width = percentage + "%";
                progressBar.textContent = percentage + "%";
            }
        };

        xhr.onload = function () {
            if (xhr.status === 200) {
                const result = JSON.parse(xhr.responseText);
                showStatus(result.message || "„Ç¢„ÉÉ„Éó„É≠„Éº„ÉâÊàêÂäü", "success");
                fileList.innerHTML = "";
                selectedFiles = [];
                updateButtonState();
                progressContainer.style.display = "none";
                document.getElementById("userMessage").value = "";
            } else {
                // ‰øÆÊ≠£Ôºöthrow „Åß„ÅØ„Å™„ÅèÁõ¥Êé•Âá¶ÁêÜ
                console.error("HTTP„Ç®„É©„Éº:", xhr.status, xhr.statusText);
                showStatus(
                    "„Ç®„É©„Éº„ÅåÁô∫Áîü„Åó„Åæ„Åó„Åü: " +
                        (xhr.statusText || "„Ç¢„ÉÉ„Éó„É≠„Éº„Éâ„Å´Â§±Êïó„Åó„Åæ„Åó„Åü"),
                    "error"
                );
                progressContainer.style.display = "none";
                updateButtonState();
            }
        };

        xhr.onerror = function () {
            // ‰øÆÊ≠£Ôºöthrow „Åß„ÅØ„Å™„ÅèÁõ¥Êé•Âá¶ÁêÜ
            console.error("„Éç„ÉÉ„Éà„ÉØ„Éº„ÇØ„Ç®„É©„Éº„ÅåÁô∫Áîü„Åó„Åæ„Åó„Åü");
            showStatus("„Éç„ÉÉ„Éà„ÉØ„Éº„ÇØ„Ç®„É©„Éº„ÅåÁô∫Áîü„Åó„Åæ„Åó„Åü", "error");
            progressContainer.style.display = "none";
            updateButtonState();
        };

        xhr.send(formData);
    } catch (error) {
        console.error("„Ç¢„ÉÉ„Éó„É≠„Éº„Éâ„Ç®„É©„Éº:", error);
        showStatus("„Ç®„É©„Éº„ÅåÁô∫Áîü„Åó„Åæ„Åó„Åü: " + error.message, "error");
        progressContainer.style.display = "none";
        updateButtonState();
    }
}

// „Éâ„É©„ÉÉ„Ç∞ÔºÜ„Éâ„É≠„ÉÉ„ÉóÂá¶ÁêÜ
dropZone.addEventListener("dragover", (e) => {
    e.preventDefault();
    dropZone.classList.add("active");
});

dropZone.addEventListener("dragleave", () => {
    dropZone.classList.remove("active");
});

dropZone.addEventListener("drop", async (e) => {
    e.preventDefault();
    dropZone.classList.remove("active");

    if (e.dataTransfer.items) {
        // DataTransferItemList„Çí‰ΩøÁî®Ôºà„Éï„Ç©„É´„ÉÄ„Å®„Éï„Ç°„Ç§„É´„ÅÆ‰∏°Êñπ„Çí„Çµ„Éù„Éº„ÉàÔºâ
        await handleDroppedItems(e.dataTransfer.items);
    } else {
        // ÂæìÊù•„ÅÆ„Éï„Ç°„Ç§„É´„É™„Çπ„Éà„Çí‰ΩøÁî®Ôºà„Éï„Ç©„É´„ÉÄÈùû„Çµ„Éù„Éº„ÉàÔºâ
        handleFiles(Array.from(e.dataTransfer.files));
    }
});

// DataTransferItemList„Åã„Çâ„Éï„Ç°„Ç§„É´„Å®„Éï„Ç©„É´„ÉÄ„ÇíÂá¶ÁêÜ„Åô„ÇãÈñ¢Êï∞
async function handleDroppedItems(items) {
    const filePromises = [];

    for (let i = 0; i < items.length; i++) {
        const item = items[i];

        if (item.kind === "file") {
            // webkitGetAsEntry„Åå„Çµ„Éù„Éº„Éà„Åï„Çå„Å¶„ÅÑ„ÇãÂ†¥Âêà„ÅØ„Åù„Çå„Çí‰ΩøÁî®
            if (item.webkitGetAsEntry) {
                const entry = item.webkitGetAsEntry();
                if (entry) {
                    if (entry.isDirectory) {
                        // „Éï„Ç©„É´„ÉÄ„ÅÆÂ†¥Âêà„ÄÅÂÜçÂ∏∞ÁöÑ„Å´Âá¶ÁêÜ
                        filePromises.push(readDirectory(entry));
                    } else {
                        // „Éï„Ç°„Ç§„É´„ÅÆÂ†¥Âêà„ÄÅ„Åù„ÅÆ„Åæ„ÅæËøΩÂä†
                        filePromises.push(Promise.resolve([item.getAsFile()]));
                    }
                }
            } else {
                // webkitGetAsEntry„Åå„Çµ„Éù„Éº„Éà„Åï„Çå„Å¶„ÅÑ„Å™„ÅÑÂ†¥Âêà„ÅØÁõ¥Êé•„Éï„Ç°„Ç§„É´„ÇíÂèñÂæó
                filePromises.push(Promise.resolve([item.getAsFile()]));
            }
        }
    }

    // „Åô„Åπ„Å¶„ÅÆ„Éï„Ç°„Ç§„É´ÂèñÂæó„ÅåÂÆå‰∫Ü„Åô„Çã„ÅÆ„ÇíÂæÖ„Å§
    const fileArrays = await Promise.all(filePromises);
    // Âπ≥Âù¶Âåñ„Åó„Å¶Âçò‰∏Ä„ÅÆ„Éï„Ç°„Ç§„É´ÈÖçÂàó„Å´„Åô„Çã
    const allFiles = fileArrays.flat();

    // ÂèñÂæó„Åó„Åü„Éï„Ç°„Ç§„É´„ÇíaddFiles„Å´Ê∏°„Åô
    handleFiles(allFiles);
}

// „Éá„Ç£„É¨„ÇØ„Éà„É™„ÇíÂÜçÂ∏∞ÁöÑ„Å´Ë™≠„ÅøËæº„ÇÄÈñ¢Êï∞
function readDirectory(directoryEntry) {
    return new Promise((resolve) => {
        const dirReader = directoryEntry.createReader();
        const files = [];

        // „Éá„Ç£„É¨„ÇØ„Éà„É™ÂÜÖ„ÅÆ„Ç®„É≥„Éà„É™„ÇíË™≠„ÅøËæº„ÇÄ
        function readEntries() {
            dirReader.readEntries(
                async (entries) => {
                    if (entries.length === 0) {
                        // „Åô„Åπ„Å¶„ÅÆ„Ç®„É≥„Éà„É™„ÇíË™≠„ÅøËæº„Çì„Å†„Çâresolve„Åô„Çã
                        resolve(files);
                        return;
                    }

                    // ÂêÑ„Ç®„É≥„Éà„É™„ÇíÂá¶ÁêÜ
                    for (let i = 0; i < entries.length; i++) {
                        const entry = entries[i];

                        if (entry.isDirectory) {
                            // „Çµ„Éñ„Éá„Ç£„É¨„ÇØ„Éà„É™„ÅÆÂ†¥Âêà„ÄÅÂÜçÂ∏∞ÁöÑ„Å´Ë™≠„ÅøËæº„ÇÄ
                            const subFiles = await readDirectory(entry);
                            files.push(...subFiles);
                        } else {
                            // „Éï„Ç°„Ç§„É´„ÅÆÂ†¥Âêà„ÄÅFile„Ç™„Éñ„Ç∏„Çß„ÇØ„Éà„Å´Â§âÊèõ„Åó„Å¶ËøΩÂä†
                            files.push(await getFileFromEntry(entry));
                        }
                    }

                    // „Åæ„Å†„Ç®„É≥„Éà„É™„ÅåÊÆã„Å£„Å¶„ÅÑ„ÇãÂèØËÉΩÊÄß„Åå„ÅÇ„Çã„ÅÆ„ÅßÂÜçÂ∫¶Ë™≠„ÅøËæº„Åø
                    readEntries();
                },
                (error) => {
                    console.error("„Éá„Ç£„É¨„ÇØ„Éà„É™„ÅÆË™≠„ÅøËæº„Åø„Ç®„É©„Éº:", error);
                    resolve(files);
                }
            );
        }

        readEntries();
    });
}

// FileEntry„Åã„ÇâFile„Ç™„Éñ„Ç∏„Çß„ÇØ„Éà„ÇíÂèñÂæó„Åô„ÇãÈñ¢Êï∞
function getFileFromEntry(fileEntry) {
    return new Promise((resolve) => {
        fileEntry.file(
            (file) => resolve(file),
            (error) => {
                console.error("„Éï„Ç°„Ç§„É´„ÅÆÂèñÂæó„Ç®„É©„Éº:", error);
                resolve(null);
            }
        );
    });
}

// Ë§áÊï∞„Éï„Ç°„Ç§„É´„ÇíÂá¶ÁêÜ„Åô„ÇãÈñ¢Êï∞
function handleFiles(files) {
    // null„ÇíÈô§Â§ñ
    const validFiles = files.filter((file) => file !== null);

    if (validFiles.length > 0) {
        addFiles(validFiles);
        showStatus(
            `${validFiles.length}ÂÄã„ÅÆ„Éï„Ç°„Ç§„É´„ÅåÈÅ∏Êäû„Åï„Çå„Åæ„Åó„Åü„ÄÇ`,
            "success"
        );
    }
}

// „Éï„Ç°„Ç§„É´ÈÅ∏ÊäûÂá¶ÁêÜ
fileInput.addEventListener("change", (e) => {
    if (e.target.files.length > 0) {
        // webkitGetAsEntry „ÅØ„Éâ„É©„ÉÉ„Ç∞ÔºÜ„Éâ„É≠„ÉÉ„ÉóÂ∞ÇÁî®„Å™„ÅÆ„Åß„ÄÅ„Åì„Å°„Çâ„ÅØÂæìÊù•ÈÄö„Çä
        handleFiles(Array.from(e.target.files));
        showStatus(
            `${e.target.files.length}ÂÄã„ÅÆ„Éï„Ç°„Ç§„É´„ÅåÈÅ∏Êäû„Åï„Çå„Åæ„Åó„Åü„ÄÇ`,
            "success"
        );
    }
});

// „Éï„Ç©„É´„ÉÄÈÅ∏ÊäûÂá¶ÁêÜ
folderInput.addEventListener("change", (e) => {
    if (e.target.files.length > 0) {
        // „Éï„Ç°„Ç§„É´„ÅåÈÅ∏Êäû„Åï„Çå„ÅüÂ†¥Âêà„ÄÅwebkitRelativePath„ÇíÊåÅ„Å£„Å¶„ÅÑ„Çã„ÅØ„Åö
        const hasWebkitRelativePath = Array.from(e.target.files).some(
            (file) => file.webkitRelativePath
        );

        console.log(
            "„Éï„Ç©„É´„ÉÄÈÅ∏Êäû„Åï„Çå„Åü„Éï„Ç°„Ç§„É´:",
            Array.from(e.target.files).map((f) => ({
                name: f.name,
                path: f.webkitRelativePath,
            }))
        );

        handleFiles(Array.from(e.target.files));
        showStatus(
            `${e.target.files.length}ÂÄã„ÅÆ„Éï„Ç°„Ç§„É´„ÅåÈÅ∏Êäû„Åï„Çå„Åæ„Åó„Åü„ÄÇ${
                hasWebkitRelativePath ? "Ôºà„Éï„Ç©„É´„ÉÄÊßãÈÄ†„ÅÇ„ÇäÔºâ" : ""
            }`,
            "success"
        );
    }
});

// „Ç¢„ÉÉ„Éó„É≠„Éº„Éâ„Éú„Çø„É≥„ÇØ„É™„ÉÉ„ÇØÊôÇ
uploadButton.addEventListener("click", () => {
    const message = document.getElementById("userMessage").value.trim();

    // „Åì„Åì„Åß„É°„ÉÉ„Çª„Éº„Ç∏„ÅåÁ©∫„Åã„ÉÅ„Çß„ÉÉ„ÇØ„Åó„Å¶„Ç¢„É©„Éº„ÉàË°®Á§∫
    if (!message) {
        showStatus("‚ö†Ô∏è „É°„ÉÉ„Çª„Éº„Ç∏„ÇíÂÖ•Âäõ„Åó„Å¶„Åè„Å†„Åï„ÅÑ„ÄÇ", "error");
        alert("„É°„ÉÉ„Çª„Éº„Ç∏„ÅåÊú™ÂÖ•Âäõ„Åß„Åô„ÄÇÂÖ•Âäõ„Åó„Å¶„Åã„Çâ„Ç¢„ÉÉ„Éó„É≠„Éº„Éâ„Åó„Å¶„Åè„Å†„Åï„ÅÑ„ÄÇ");
        return; // Âá¶ÁêÜ„Çí‰∏≠Ê≠¢
    }

    if (selectedFiles.length > 0) {
        uploadFiles(selectedFiles); // „É°„ÉÉ„Çª„Éº„Ç∏„ÅØ uploadFiles ÂÜÖ„ÅßÂèñÂæóÊ∏à„Åø„Å™„ÅÆ„Åß„Åù„ÅÆ„Åæ„Åæ„ÅßOK
    }
});

// „ÇØ„É™„Ç¢„Éú„Çø„É≥„ÇØ„É™„ÉÉ„ÇØÊôÇ
clearButton.addEventListener("click", () => {
    selectedFiles = [];
    fileList.innerHTML = "";
    showStatus("„Éï„Ç°„Ç§„É´ÈÅ∏Êäû„Çí„ÇØ„É™„Ç¢„Åó„Åæ„Åó„Åü„ÄÇ", "info");
    updateButtonState();
});

// ÈÉ®‰ΩçÈÅ∏ÊäûÁî®„ÅÆ„ÉÅ„Çß„ÉÉ„ÇØ„Éú„ÉÉ„ÇØ„Çπ„ÅÆ„Çπ„Çø„Ç§„É´Â§âÊõ¥
document.addEventListener("DOMContentLoaded", function () {
    const teethCheckboxes = document.querySelectorAll('input[name="teeth[]"]');
    teethCheckboxes.forEach(function (checkbox) {
        checkbox.addEventListener("change", function () {
            const cell = this.parentElement;
            if (this.checked) {
                cell.style.outline = "2px solid #dc143c";
            } else {
                cell.style.outline = "none";
            }
        });
    });
});

document.addEventListener("DOMContentLoaded", function () {
    // Êó•‰ªò„Éï„Ç£„Éº„É´„Éâ„ÇíÈÅ∏Êäû
    const appointmentDateField = document.getElementById("appointmentDate");

    // Êó•‰ªò„Éï„Ç£„Éº„É´„Éâ„Åå„ÇØ„É™„ÉÉ„ÇØ„Åï„Çå„Åü„Å®„Åç„Å´„Ç´„É¨„É≥„ÉÄ„Éº„ÇíÈñã„Åè
    appointmentDateField.addEventListener("click", function () {
        if (typeof this.showPicker === "function") {
            this.showPicker();
        } else {
            this.blur();
            setTimeout(() => {
                this.focus();
            }, 10);
        }
    });
});

document.addEventListener("DOMContentLoaded", function () {
    const emailInput = document.getElementById("userEmail");

    emailInput.addEventListener("input", function () {
        // ÂÖ®ËßíËã±Êï∞Â≠ó„ÉªË®òÂè∑„ÇíÂçäËßí„Å´ÁΩÆÊèõ
        this.value = this.value.replace(
            /[Ôº°-Ôº∫ÔΩÅ-ÔΩöÔºê-ÔºôÔºÅ-ÔΩû]/g,
            function (s) {
                return String.fromCharCode(s.charCodeAt(0) - 0xfee0);
            }
        );
    });
});
